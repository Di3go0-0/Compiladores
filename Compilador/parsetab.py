
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSOLUTE AMPERSANT AND ARRAY ASM ASSIGN BEGIN CASE CIRCUMFLEX COLON COMMA CONST CONSTRUCTOR CONSTSTRING DEQUAL DESTRUCTOR DIACRITIC DIV DIVIDE DO DOLLAR DOT DOWNTO ELSE END EQUAL EXCLAMATION EXTERNAL FILE FOR FORWARD FUNCTION GOTO GREATER GREATEREQUAL HASHTAG ID IF IMPLEMENTATION IN INLINE INTERFACE INTERRUPT LABEL LBLOCK LBRACKET LESS LESSEQUAL LPAREN LSHIFT MINUS MOD MODULUS NIL NOT NUMBER OBJECT OF OR PACKED PIPE PLUS PRIVATE PROCEDURE PROGRAM RBLOCK RBRACKET RECORD REPEAT RPAREN RSHIFT SEMICOLON SET SHL SHR SQUOTE STRING THEN TIMES TO TYPE UNIT UNTIL USES VAR VIRTUAL WHILE WITH XORprogram : program_heading block DOTprogram_heading : PROGRAM ID program_heading_opt_1 SEMICOLONprogram_heading_opt_1 : LPAREN identifier_list RPAREN\n\t\t| emptyactual_function : IDactual_parameter_list : LPAREN actual_parameter actual_parameter_list_1 RPARENactual_parameter_list_1 : COMMA actual_parameter actual_parameter_list_1\n\t    | emptyactual_parameter : actual_value\n\t    | actual_variable\n\t\t| actual_function\n\t\t| actual_procedureactual_procedure : IDactual_value : expressionactual_variable : variableaddition_operator : PLUS \n\t    | MINUS\n\t\t| ORarray_type : ARRAY LBRACKET index_type array_type_1 RBRACKET OF element_typearray_type_1 : COMMA index_type array_type_1\n\t    | emptyarray_variable : variableassignment_statement : variable ASSIGN expression\n\t    | ID ASSIGN expressionbase_type : typeblock : declaration_part statement_partbound_specification : ID DOT DOT ID COLON ordinal_type_identifiercase_element : case_label_list COLON statementcase_label_list : constant case_label_list_1case_label_list_1 : COMMA constant case_label_list_1\n\t    | emptycase_statement : CASE expression OF case_element case_statement_1 case_statement_opt ENDcase_statement_1 : SEMICOLON case_element case_statement_1\n\t    | emptycase_statement_opt : SEMICOLON\n\t    | emptycomponent_variable : indexed_variable\n\t    | field_designator\n\t\t| file_buffercompound_statement : BEGIN statement_sequence ENDconditional_statement : if_statement\n\t    | case_statementconformant_array_schema : packed_conformant_array_schema\n\t    | unpacked_conformant_array_schemaconstant_definition_part : CONST constant_definition SEMICOLON constant_definition_part_1constant_definition_part_1 : constant_definition SEMICOLON constant_definition_part_1\n\t    | emptyconstant_definition : ID EQUAL constantconstant : constant_opt_sign ID\n\t    | constant_opt_sign number\n\t\t| CONSTSTRING constant_opt_sign : PLUS\n\t    | MINUS\n\t\t| emptydeclaration_part : declaration_part_opt_1 declaration_part_opt_2 declaration_part_opt_3 declaration_part_opt_4declaration_part_opt_1 : label_declaration_part\n\t    | emptydeclaration_part_opt_2 : constant_definition_part\n\t    | emptydeclaration_part_opt_3 : type_definition_part \n\t\t| emptydeclaration_part_opt_4 : variable_declaration_part\n\t    | emptydirective : FORWARDelement_list : expression element_list_1\n\t    | emptyelement_list_1 : COMMA expression element_list_1\n\t    | emptyelement_type : typeentire_variable : IDenumerated_type : LPAREN identifier_list RPARENexpression_list : expression expression_list_1expression_list_1 : COMMA expression expression_list_1\n\t    | emptyexpression : simple_expression \n\t    | simple_expression relational_operator simple_expressionfactor : NUMBER\n\t    | CONSTSTRING\n\t\t| NIL\n\t\t| ID\n\t\t| set\n\t\t| variable\n\t\t| function_designator\n\t\t| LPAREN expression RPAREN\n\t\t| NOT factorfield_designator : record_variable DOT IDfield_list : fixed_part field_list_opt_1 field_list_opt_2\n\t    | variant_part field_list_opt_2\n\t\t| emptyfield_list_opt_1 : SEMICOLON variant_part\n\t    | emptyfield_list_opt_2 : SEMICOLON\n\t    | emptyfield_width : expressionfile_buffer : file_variable CIRCUMFLEXfile_component_type : typefile_type : FILE OF file_component_typefile_variable : variablefinal_expression : expressionfixed_part : record_section fixed_part_1fixed_part_1 : SEMICOLON record_section fixed_part_1\n\t    | emptyfor_statement : FOR ID ASSIGN initial_expression for_statement_opt_1 final_expression DO statementfor_statement_opt_1 : TO\n\t    | DOWNTOformal_parameter_list : LPAREN formal_parameter_section formal_parameter_list_1 RPARENformal_parameter_list_1 : SEMICOLON formal_parameter_section formal_parameter_list_1\n        | emptyformal_parameter_section : value_parameter_section \n\t\t| variable_parameter_section\n\t\t| procedure_parameter_section \n\t\t| function_parameter_sectionfraction_length : expressionfunction_declaration : function_heading SEMICOLON function_declaration_1 SEMICOLONfunction_declaration_1 : directive\n\t    | blockfunction_designator : ID function_designator_opt_1function_designator_opt_1 : actual_parameter_list\n \t\t| emptyfunction_heading : FUNCTION ID function_heading_opt_1 COLON result_typefunction_heading_opt_1 : formal_parameter_list\n\t    | emptyfunction_parameter_section : function_headinggoto_statement : GOTO labelidentifier_list : ID identifier_list_1identifier_list_1 : COMMA ID identifier_list_1\n\t    | emptyif_statement : IF expression THEN statement if_statement_opt_1if_statement_opt_1 : ELSE statement\n\t    | emptyindex_type : simple_typeindexed_variable : array_variable LBRACKET expression_list RBRACKETinitial_expression : expressioninteger : NUMBERlabel_declaration_part : LABEL label label_declaration_part_1 SEMICOLONlabel_declaration_part_1 : SEMICOLON label label_declaration_part_1\n\t    | emptylabel : NUMBERlower_bound : constantmultiplication_operator : TIMES\n\t    | DIVIDE\n\t\t| MODULUS\n\t\t| ANDnumber : integer\n\t    | real_numberordinal_type_identifier : IDoutput_list : output_value output_list_opt_1output_list_opt_1 : COMMA output_value output_list_opt_1\n\t    | emptyoutput_value : expression output_value_opt_1output_value_opt_1 : SEMICOLON field_width output_value_opt_2\n\t    | emptyoutput_value_opt_2 : COLON fraction_length\n\t    | emptypacked_conformant_array_schema : PACKED ARRAY LBRACKET bound_specification RBRACKET OF IDparameter_type : ID \n\t\t| conformant_array_schemapointer_type : CIRCUMFLEX IDpointer_variable : variableprocedure_and_function_declaration_part : procedure_and_function_declaration_part_1procedure_and_function_declaration_part_1 : procedure_declaration SEMICOLON procedure_and_function_declaration_part_1\n                                                 | function_declaration SEMICOLON procedure_and_function_declaration_part_1\n                                                 | emptyprocedure_declaration : procedure_heading SEMICOLON procedure_declaration_1procedure_declaration_1 : directive\n\t    | blockprocedure_heading : PROCEDURE ID procedure_heading_opt_1procedure_heading_opt_1 : formal_parameter_list\n\t    | emptyprocedure_parameter_section : procedure_headingprocedure_statement : ID procedure_statement_opt_1procedure_statement_opt_1 : actual_parameter_list\n\t    | emptyreal_number : NUMBERrecord_section : identifier_list COLON typerecord_type : RECORD field_list ENDrecord_variable : variablereferenced_variable : pointer_variable CIRCUMFLEXrelational_operator : EQUAL\n                           | DEQUAL\n                           | LESS\n                           | LESSEQUAL\n                           | GREATER\n                           | GREATEREQUAL\n                           | INrepeat_statement : REPEAT statement_sequence UNTIL expressionrepetitive_statement : while_statement\n                            | repeat_statement\n                            | for_statementresult_type : IDset_type : SET OF base_typeset : LBRACKET element_list RBRACKETsimple_expression : simple_expression_opt_1 term simple_expression_1simple_expression_1 : addition_operator term simple_expression_1\n                           | emptysimple_expression_opt_1 : PLUS \n\t\t| MINUS \n\t\t| emptysimple_statement : assignment_statement\n                        | procedure_statement\n                        | goto_statement\n                        | emptysimple_type : subrange_type\n                   | enumerated_typestatement_part : BEGIN statement_sequence ENDstatement_sequence : statement statement_sequence_1statement_sequence_1 : SEMICOLON statement statement_sequence_1\n                            | emptystatement : statement_opt_1 statement_1statement_1 : simple_statement\n                   | structured_statementstatement_opt_1 : LABEL COLON\n\t\t\t\t\t   | emptystructured_statement : compound_statement\n                            | repetitive_statement\n                            | conditional_statement\n                            | with_statementstructured_type : structered_type_opt_1 unpacked_structured_typestructered_type_opt_1 : PACKED \n\t\t| emptysubrange_type : lower_bound DOT DOT upper_boundtag_field : ID COLON\n                 | emptyterm : factor term_1term_1 : multiplication_operator factor term_1\n              | emptytype_definition_part : TYPE type_definition SEMICOLON type_definition_part_1type_definition_part_1 : type_definition SEMICOLON type_definition_part_1\n                              | emptytype_definition : ID EQUAL typetype : simple_type\n            | structured_type\n            | pointer_type\n            | IDunpacked_conformant_array_schema : ARRAY LBRACKET bound_specification unpacked_conformant_array_schema_1 RBRACKET OF unpacked_conformant_array_schema_2unpacked_conformant_array_schema_1 : SEMICOLON bound_specification unpacked_conformant_array_schema_1\n                                          | emptyunpacked_conformant_array_schema_2 : ID\n                                          | conformant_array_schemaunpacked_structured_type : array_type\n                                | record_type\n                                | set_type\n                                | file_typeupper_bound : constantvalue_parameter_section : identifier_list COLON parameter_typevariable_declaration_part : VAR variable_declaration SEMICOLON variable_declaration_part_1variable_declaration_part_1 : variable_declaration SEMICOLON variable_declaration_part_1\n                                   | emptyvariable_declaration : identifier_list COLON typevariable_parameter_section : VAR identifier_list COLON parameter_typevariable : entire_variable\n                | component_variable\n                | referenced_variablevariant_part : CASE tag_field ID OF variant variant_part_1variant_part_1 : SEMICOLON variant variant_part_1\n                      | emptyvariant : case_label_list COLON LPAREN field_list RPARENwhile_statement : WHILE expression DO statementwith_statement : WITH record_variable with_statement_1 DO statementwith_statement_1 : COMMA record_variable with_statement_1\n                        | emptyempty :'
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,11,],[0,-1,]),'LABEL':([2,13,37,42,58,70,152,175,208,277,282,339,],[9,26,-2,26,26,26,26,26,26,26,26,26,]),'CONST':([2,6,7,8,37,89,],[-262,17,-56,-57,-2,-135,]),'TYPE':([2,6,7,8,14,15,16,37,87,89,126,127,198,261,],[-262,-262,-56,-57,31,-58,-59,-2,-262,-135,-45,-47,-262,-46,]),'VAR':([2,6,7,8,14,15,16,28,29,30,37,87,89,123,126,127,182,183,198,248,261,288,],[-262,-262,-56,-57,-262,-58,-59,84,-60,-61,-2,-262,-135,-262,-45,-47,-227,-229,-262,-262,-46,-228,]),'BEGIN':([2,5,6,7,8,13,14,15,16,25,27,28,29,30,37,42,58,70,80,81,82,83,87,89,123,126,127,152,175,179,182,183,198,208,245,246,248,261,277,282,287,288,315,339,],[-262,13,-262,-56,-57,-262,-262,-58,-59,58,-213,-262,-60,-61,-2,-262,-262,-262,-212,-55,-62,-63,-262,-135,-262,-45,-47,-262,-262,-262,-227,-229,-262,-262,-246,-248,-262,-46,-262,-262,-262,-228,-247,-262,]),'ID':([3,13,17,21,25,27,31,42,58,64,69,70,71,72,73,80,84,87,88,93,96,97,101,107,110,111,112,113,119,123,124,129,131,132,133,149,152,153,154,155,156,157,158,159,160,170,171,172,173,174,175,176,179,180,192,194,196,198,206,208,213,215,216,217,219,221,222,223,224,232,242,248,255,271,273,274,275,277,280,282,284,287,289,295,297,298,299,326,328,330,331,339,344,350,356,357,364,368,],[10,-262,33,39,56,-213,86,-262,-262,106,-262,-262,115,-262,-262,-212,39,33,-262,135,-262,-262,146,151,166,-196,-197,-198,-262,86,184,199,-52,-53,-54,106,-262,-262,-179,-180,-181,-182,-183,-184,-185,-262,166,-262,-262,-262,-262,-262,39,184,258,39,-54,33,146,-262,166,-16,-17,-18,166,-140,-141,-142,-143,-198,-262,86,39,-262,-262,-104,-105,-262,-262,-262,-262,39,-262,329,184,184,-262,39,349,-223,184,-262,-262,-222,-262,184,-262,39,]),'DOT':([4,12,40,55,56,65,66,67,68,74,75,76,104,105,106,118,120,130,145,146,151,166,168,193,197,199,200,201,202,203,209,240,259,],[11,-26,-205,-177,-70,107,-251,-252,-253,-37,-38,-39,107,-177,-70,-178,-95,-51,-177,-70,-86,-70,-177,259,-139,-49,-50,-144,-145,-134,107,-132,299,]),'NUMBER':([9,35,57,69,72,73,88,96,97,101,110,111,112,113,119,124,129,131,132,133,153,154,155,156,157,158,159,160,170,171,172,173,174,176,180,196,206,213,215,216,217,219,221,222,223,224,232,242,271,273,274,275,280,284,289,297,298,299,331,344,356,357,364,],[19,19,19,-262,-262,-262,-262,-262,-262,-262,163,-196,-197,-198,-262,-262,203,-52,-53,-54,-262,-179,-180,-181,-182,-183,-184,-185,-262,163,-262,-262,-262,-262,-262,-54,-262,163,-16,-17,-18,163,-140,-141,-142,-143,-198,-262,-262,-262,-104,-105,-262,-262,-262,-262,-262,-262,-262,-262,-262,-262,-262,]),'LPAREN':([10,56,69,72,73,96,97,101,110,111,112,113,119,124,153,154,155,156,157,158,159,160,166,170,171,172,173,174,180,206,213,215,216,217,219,221,222,223,224,232,242,271,273,274,275,289,297,298,331,344,357,366,],[21,101,-262,-262,-262,-262,-262,-262,170,-196,-197,-198,-262,194,-262,-179,-180,-181,-182,-183,-184,-185,101,-262,170,-262,-262,-262,194,-262,170,-16,-17,-18,170,-140,-141,-142,-143,-198,-262,-262,-262,-104,-105,194,194,194,194,194,194,368,]),'SEMICOLON':([10,13,18,19,20,22,24,25,27,32,34,36,42,44,45,46,47,48,49,50,51,52,53,54,56,58,59,60,61,62,63,66,67,68,70,74,75,76,80,85,90,91,95,98,99,100,102,109,118,120,121,125,128,130,134,137,138,147,151,152,161,162,163,164,165,166,167,168,169,175,181,184,185,186,187,188,189,190,199,200,201,202,203,208,210,211,212,214,218,220,225,226,227,229,233,236,237,240,244,247,249,250,251,252,253,258,262,264,266,267,268,269,276,277,278,279,281,282,291,292,294,300,302,303,307,311,312,318,319,321,325,327,332,333,334,335,336,337,339,340,341,347,348,351,352,355,359,361,362,363,365,367,369,371,],[-262,-262,35,-138,37,-4,42,-262,-213,87,89,-137,-262,-209,-210,-211,-199,-200,-201,-202,-214,-215,-216,-217,-262,-262,-187,-188,-189,-41,-42,-251,-252,-253,-262,-37,-38,-39,-212,123,35,-3,42,-171,-172,-173,-124,-75,-178,-95,179,198,-48,-51,-136,-23,-24,-40,-86,-262,-262,-262,-77,-78,-79,-70,-81,-82,-83,-262,248,-234,-230,-231,-232,-233,-203,-204,-49,-50,-144,-145,-134,-262,-258,-76,-193,-195,-224,-226,-117,-118,-119,-85,-186,-262,280,-132,287,-249,-218,-240,-241,-242,-243,-158,-6,-259,-262,-262,-84,-192,-128,-262,-130,309,-34,-262,320,323,326,-71,-194,-225,-129,280,-28,-176,323,-91,-100,-102,-191,-25,-97,-96,-221,-244,-262,-32,-33,-90,326,-175,-103,-101,364,-19,-69,-254,-256,364,-255,-257,]),'GOTO':([13,25,27,42,58,70,80,152,175,208,277,282,339,],[-262,57,-213,-262,-262,-262,-212,-262,-262,-262,-262,-262,-262,]),'WITH':([13,25,27,42,58,70,80,152,175,208,277,282,339,],[-262,64,-213,-262,-262,-262,-212,-262,-262,-262,-262,-262,-262,]),'WHILE':([13,25,27,42,58,70,80,152,175,208,277,282,339,],[-262,69,-213,-262,-262,-262,-212,-262,-262,-262,-262,-262,-262,]),'REPEAT':([13,25,27,42,58,70,80,152,175,208,277,282,339,],[-262,70,-213,-262,-262,-262,-212,-262,-262,-262,-262,-262,-262,]),'FOR':([13,25,27,42,58,70,80,152,175,208,277,282,339,],[-262,71,-213,-262,-262,-262,-212,-262,-262,-262,-262,-262,-262,]),'IF':([13,25,27,42,58,70,80,152,175,208,277,282,339,],[-262,72,-213,-262,-262,-262,-212,-262,-262,-262,-262,-262,-262,]),'CASE':([13,25,27,42,58,70,80,152,175,208,255,277,282,320,339,368,],[-262,73,-213,-262,-262,-262,-212,-262,-262,-262,295,-262,-262,295,-262,295,]),'END':([13,19,23,24,25,27,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,58,59,60,61,62,63,66,67,68,74,75,76,80,95,98,99,100,102,103,109,118,120,130,136,137,138,147,151,152,161,162,163,164,165,166,167,168,169,175,184,186,187,188,189,190,199,200,201,202,203,208,210,211,212,214,218,220,225,226,227,229,233,236,237,240,249,250,251,252,253,255,258,262,264,266,267,268,269,276,277,278,279,281,282,290,291,292,293,294,300,302,303,307,308,309,310,311,312,318,319,321,322,323,324,325,327,332,333,334,335,336,337,339,340,341,346,347,348,351,352,355,359,361,362,363,365,367,369,371,],[-262,-138,40,-262,-262,-213,-206,-262,-208,-209,-210,-211,-199,-200,-201,-202,-214,-215,-216,-217,-262,-262,-187,-188,-189,-41,-42,-251,-252,-253,-37,-38,-39,-212,-262,-171,-172,-173,-124,147,-75,-178,-95,-51,-207,-23,-24,-40,-86,-262,-262,-262,-77,-78,-79,-70,-81,-82,-83,-262,-234,-231,-232,-233,-203,-204,-49,-50,-144,-145,-134,-262,-258,-76,-193,-195,-224,-226,-117,-118,-119,-85,-186,-262,-262,-132,-218,-240,-241,-242,-243,-262,-158,-6,-259,-262,-262,-84,-192,-128,-262,-130,-262,-34,-262,318,-262,-262,-89,-262,-71,-194,-225,-129,340,-35,-36,-262,-28,-176,-262,-91,-88,-92,-93,-100,-102,-191,-25,-97,-96,-221,-244,-262,-32,-33,-87,-90,-262,-175,-103,-101,-262,-19,-69,-254,-256,-262,-255,-257,]),'UNTIL':([19,24,25,27,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,59,60,61,62,63,66,67,68,70,74,75,76,80,95,98,99,100,102,109,114,118,120,136,137,138,147,151,152,161,162,163,164,165,166,167,168,169,175,208,210,211,212,214,218,220,225,226,227,229,233,236,240,262,264,266,267,268,269,276,277,278,302,303,307,339,340,352,],[-138,-262,-262,-213,-206,-262,-208,-209,-210,-211,-199,-200,-201,-202,-214,-215,-216,-217,-262,-187,-188,-189,-41,-42,-251,-252,-253,-262,-37,-38,-39,-212,-262,-171,-172,-173,-124,-75,173,-178,-95,-207,-23,-24,-40,-86,-262,-262,-262,-77,-78,-79,-70,-81,-82,-83,-262,-262,-258,-76,-193,-195,-224,-226,-117,-118,-119,-85,-186,-262,-132,-6,-259,-262,-262,-84,-192,-128,-262,-130,-194,-225,-129,-262,-32,-103,]),'ELSE':([19,25,27,44,45,46,47,48,49,50,51,52,53,54,56,59,60,61,62,63,66,67,68,74,75,76,80,98,99,100,102,109,118,120,137,138,147,151,152,161,162,163,164,165,166,167,168,169,175,208,210,211,212,214,218,220,225,226,227,229,233,236,240,262,264,266,267,268,269,276,277,278,302,303,307,339,340,352,],[-138,-262,-213,-209,-210,-211,-199,-200,-201,-202,-214,-215,-216,-217,-262,-187,-188,-189,-41,-42,-251,-252,-253,-37,-38,-39,-212,-171,-172,-173,-124,-75,-178,-95,-23,-24,-40,-86,-262,-262,-262,-77,-78,-79,-70,-81,-82,-83,-262,-262,-258,-76,-193,-195,-224,-226,-117,-118,-119,-85,-186,277,-132,-6,-259,-262,-262,-84,-192,-128,-262,-130,-194,-225,-129,-262,-32,-103,]),'COLON':([26,39,92,94,122,130,135,199,200,201,202,203,204,238,239,283,285,296,313,329,342,360,],[80,-262,-125,-127,180,-51,-262,-49,-50,-144,-145,-134,-126,282,-262,-29,-31,331,-262,350,-30,366,]),'EQUAL':([33,66,67,68,74,75,76,86,109,118,120,151,161,162,163,164,165,166,167,168,169,212,214,218,220,225,226,227,229,240,262,266,267,268,269,302,303,],[88,-251,-252,-253,-37,-38,-39,124,154,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-193,-195,-224,-226,-117,-118,-119,-85,-132,-6,-262,-262,-84,-192,-194,-225,]),'RPAREN':([38,39,66,67,68,74,75,76,92,94,109,118,120,130,135,139,140,141,142,143,144,145,146,151,161,162,163,164,165,166,167,168,169,184,186,187,188,189,190,199,200,201,202,203,204,205,207,211,212,214,218,220,225,226,227,228,229,240,249,250,251,252,253,258,260,262,263,266,267,268,269,291,292,293,294,300,301,302,303,318,319,321,322,323,324,325,327,332,333,334,335,336,337,346,347,348,351,355,359,361,362,363,365,367,368,369,370,371,],[91,-262,-251,-252,-253,-37,-38,-39,-125,-127,-75,-178,-95,-51,-262,-262,-9,-10,-11,-12,-14,-15,-5,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-234,-231,-232,-233,-203,-204,-49,-50,-144,-145,-134,-126,262,-8,-76,-193,-195,-224,-226,-117,-118,-119,268,-85,-132,-218,-240,-241,-242,-243,-158,300,-6,-262,-262,-262,-84,-192,-262,-262,-89,-262,-71,-7,-194,-225,-176,-262,-91,-88,-92,-93,-100,-102,-191,-25,-97,-96,-221,-244,-87,-90,-262,-175,-101,-262,-19,-69,-254,-256,-262,-262,-255,371,-257,]),'COMMA':([39,66,67,68,74,75,76,104,105,106,109,118,120,130,135,139,140,141,142,143,144,145,146,151,161,162,163,164,165,166,167,168,169,178,189,190,199,200,201,202,203,209,211,212,214,218,220,225,226,227,229,231,239,240,262,263,266,267,268,269,286,300,302,303,304,313,316,317,336,337,354,],[93,-251,-252,-253,-37,-38,-39,149,-177,-70,-75,-178,-95,-51,93,206,-9,-10,-11,-12,-14,-15,-5,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,242,-203,-204,-49,-50,-144,-145,-134,149,-76,-193,-195,-224,-226,-117,-118,-119,-85,271,284,-132,-6,206,-262,-262,-84,-192,242,-71,-194,-225,271,284,344,-131,-221,-244,344,]),'ASSIGN':([55,56,66,67,68,74,75,76,115,118,120,151,240,],[96,97,-251,-252,-253,-37,-38,-39,174,-178,-95,-86,-132,]),'CIRCUMFLEX':([55,56,66,67,68,74,75,76,77,79,105,106,118,120,124,145,146,151,166,168,180,240,297,298,331,357,],[-98,-70,-251,-252,-253,-37,-38,-39,118,120,-98,-70,-178,-95,192,-98,-70,-86,-70,-98,192,-132,192,192,192,192,]),'LBRACKET':([55,56,66,67,68,69,72,73,74,75,76,78,96,97,101,105,106,110,111,112,113,118,119,120,145,146,151,153,154,155,156,157,158,159,160,166,168,170,171,172,173,174,206,213,215,216,217,219,221,222,223,224,232,240,242,254,271,273,274,275,],[-22,-70,-251,-252,-253,-262,-262,-262,-37,-38,-39,119,-262,-262,-262,-22,-70,172,-196,-197,-198,-178,-262,-95,-22,-70,-86,-262,-179,-180,-181,-182,-183,-184,-185,-70,-22,-262,172,-262,-262,-262,-262,172,-16,-17,-18,172,-140,-141,-142,-143,-198,-132,-262,289,-262,-262,-104,-105,]),'DO':([66,67,68,74,75,76,104,105,106,108,109,118,120,148,150,151,161,162,163,164,165,166,167,168,169,209,211,212,214,218,220,225,226,227,229,240,262,265,266,267,268,269,302,303,305,306,],[-251,-252,-253,-37,-38,-39,-262,-177,-70,152,-75,-178,-95,208,-261,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-262,-76,-193,-195,-224,-226,-117,-118,-119,-85,-132,-6,-260,-262,-262,-84,-192,-194,-225,339,-99,]),'TIMES':([66,67,68,74,75,76,118,120,151,162,163,164,165,166,167,168,169,225,226,227,229,240,262,267,268,269,],[-251,-252,-253,-37,-38,-39,-178,-95,-86,221,-77,-78,-79,-70,-81,-82,-83,-117,-118,-119,-85,-132,-6,221,-84,-192,]),'DIVIDE':([66,67,68,74,75,76,118,120,151,162,163,164,165,166,167,168,169,225,226,227,229,240,262,267,268,269,],[-251,-252,-253,-37,-38,-39,-178,-95,-86,222,-77,-78,-79,-70,-81,-82,-83,-117,-118,-119,-85,-132,-6,222,-84,-192,]),'MODULUS':([66,67,68,74,75,76,118,120,151,162,163,164,165,166,167,168,169,225,226,227,229,240,262,267,268,269,],[-251,-252,-253,-37,-38,-39,-178,-95,-86,223,-77,-78,-79,-70,-81,-82,-83,-117,-118,-119,-85,-132,-6,223,-84,-192,]),'AND':([66,67,68,74,75,76,118,120,151,162,163,164,165,166,167,168,169,225,226,227,229,240,262,267,268,269,],[-251,-252,-253,-37,-38,-39,-178,-95,-86,224,-77,-78,-79,-70,-81,-82,-83,-117,-118,-119,-85,-132,-6,224,-84,-192,]),'PLUS':([66,67,68,69,72,73,74,75,76,88,96,97,101,118,119,120,124,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,176,180,206,218,220,225,226,227,229,240,242,262,266,267,268,269,271,273,274,275,280,284,289,297,298,299,303,331,344,356,357,364,],[-251,-252,-253,111,111,111,-37,-38,-39,131,111,111,111,-178,111,-95,131,-86,111,-179,-180,-181,-182,-183,-184,-185,215,-262,-77,-78,-79,-70,-81,-82,-83,111,111,111,111,131,131,111,-224,-226,-117,-118,-119,-85,-132,111,-6,215,-262,-84,-192,111,111,-104,-105,131,131,131,131,131,131,-225,131,131,131,131,131,]),'MINUS':([66,67,68,69,72,73,74,75,76,88,96,97,101,118,119,120,124,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,176,180,206,218,220,225,226,227,229,240,242,262,266,267,268,269,271,273,274,275,280,284,289,297,298,299,303,331,344,356,357,364,],[-251,-252,-253,112,112,112,-37,-38,-39,132,112,112,112,-178,112,-95,132,-86,112,-179,-180,-181,-182,-183,-184,-185,216,-262,-77,-78,-79,-70,-81,-82,-83,112,112,112,112,132,132,112,-224,-226,-117,-118,-119,-85,-132,112,-6,216,-262,-84,-192,112,112,-104,-105,132,132,132,132,132,132,-225,132,132,132,132,132,]),'OR':([66,67,68,74,75,76,118,120,151,161,162,163,164,165,166,167,168,169,218,220,225,226,227,229,240,262,266,267,268,269,303,],[-251,-252,-253,-37,-38,-39,-178,-95,-86,217,-262,-77,-78,-79,-70,-81,-82,-83,-224,-226,-117,-118,-119,-85,-132,-6,217,-262,-84,-192,-225,]),'DEQUAL':([66,67,68,74,75,76,109,118,120,151,161,162,163,164,165,166,167,168,169,212,214,218,220,225,226,227,229,240,262,266,267,268,269,302,303,],[-251,-252,-253,-37,-38,-39,155,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-193,-195,-224,-226,-117,-118,-119,-85,-132,-6,-262,-262,-84,-192,-194,-225,]),'LESS':([66,67,68,74,75,76,109,118,120,151,161,162,163,164,165,166,167,168,169,212,214,218,220,225,226,227,229,240,262,266,267,268,269,302,303,],[-251,-252,-253,-37,-38,-39,156,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-193,-195,-224,-226,-117,-118,-119,-85,-132,-6,-262,-262,-84,-192,-194,-225,]),'LESSEQUAL':([66,67,68,74,75,76,109,118,120,151,161,162,163,164,165,166,167,168,169,212,214,218,220,225,226,227,229,240,262,266,267,268,269,302,303,],[-251,-252,-253,-37,-38,-39,157,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-193,-195,-224,-226,-117,-118,-119,-85,-132,-6,-262,-262,-84,-192,-194,-225,]),'GREATER':([66,67,68,74,75,76,109,118,120,151,161,162,163,164,165,166,167,168,169,212,214,218,220,225,226,227,229,240,262,266,267,268,269,302,303,],[-251,-252,-253,-37,-38,-39,158,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-193,-195,-224,-226,-117,-118,-119,-85,-132,-6,-262,-262,-84,-192,-194,-225,]),'GREATEREQUAL':([66,67,68,74,75,76,109,118,120,151,161,162,163,164,165,166,167,168,169,212,214,218,220,225,226,227,229,240,262,266,267,268,269,302,303,],[-251,-252,-253,-37,-38,-39,159,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-193,-195,-224,-226,-117,-118,-119,-85,-132,-6,-262,-262,-84,-192,-194,-225,]),'IN':([66,67,68,74,75,76,109,118,120,151,161,162,163,164,165,166,167,168,169,212,214,218,220,225,226,227,229,240,262,266,267,268,269,302,303,],[-251,-252,-253,-37,-38,-39,160,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-193,-195,-224,-226,-117,-118,-119,-85,-132,-6,-262,-262,-84,-192,-194,-225,]),'THEN':([66,67,68,74,75,76,109,116,118,120,151,161,162,163,164,165,166,167,168,169,211,212,214,218,220,225,226,227,229,240,262,266,267,268,269,302,303,],[-251,-252,-253,-37,-38,-39,-75,175,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-76,-193,-195,-224,-226,-117,-118,-119,-85,-132,-6,-262,-262,-84,-192,-194,-225,]),'OF':([66,67,68,74,75,76,109,117,118,120,151,161,162,163,164,165,166,167,168,169,211,212,214,218,220,225,226,227,229,240,256,257,262,266,267,268,269,302,303,349,353,],[-251,-252,-253,-37,-38,-39,-75,176,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-76,-193,-195,-224,-226,-117,-118,-119,-85,-132,297,298,-6,-262,-262,-84,-192,-194,-225,356,357,]),'RBRACKET':([66,67,68,74,75,76,109,118,120,130,151,161,162,163,164,165,166,167,168,169,172,177,178,189,190,199,200,201,202,203,211,212,214,218,220,225,226,227,229,230,231,232,240,241,243,262,266,267,268,269,270,272,286,300,302,303,304,314,316,317,336,337,338,343,345,354,358,],[-251,-252,-253,-37,-38,-39,-75,-178,-95,-51,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-262,240,-262,-203,-204,-49,-50,-144,-145,-134,-76,-193,-195,-224,-226,-117,-118,-119,-85,269,-262,-66,-132,-72,-74,-6,-262,-262,-84,-192,-65,-68,-262,-71,-194,-225,-262,-73,-262,-131,-221,-244,-67,353,-21,-262,-20,]),'TO':([66,67,68,74,75,76,109,118,120,151,161,162,163,164,165,166,167,168,169,211,212,214,218,220,225,226,227,229,234,235,240,262,266,267,268,269,302,303,],[-251,-252,-253,-37,-38,-39,-75,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-76,-193,-195,-224,-226,-117,-118,-119,-85,274,-133,-132,-6,-262,-262,-84,-192,-194,-225,]),'DOWNTO':([66,67,68,74,75,76,109,118,120,151,161,162,163,164,165,166,167,168,169,211,212,214,218,220,225,226,227,229,234,235,240,262,266,267,268,269,302,303,],[-251,-252,-253,-37,-38,-39,-75,-178,-95,-86,-262,-262,-77,-78,-79,-70,-81,-82,-83,-76,-193,-195,-224,-226,-117,-118,-119,-85,275,-133,-132,-6,-262,-262,-84,-192,-194,-225,]),'CONSTSTRING':([69,72,73,88,96,97,101,110,111,112,113,119,124,153,154,155,156,157,158,159,160,170,171,172,173,174,176,180,206,213,215,216,217,219,221,222,223,224,232,242,271,273,274,275,280,284,289,297,298,299,331,344,356,357,364,],[-262,-262,-262,130,-262,-262,-262,164,-196,-197,-198,-262,130,-262,-179,-180,-181,-182,-183,-184,-185,-262,164,-262,-262,-262,130,130,-262,164,-16,-17,-18,164,-140,-141,-142,-143,-198,-262,-262,-262,-104,-105,130,130,130,130,130,130,130,130,130,130,130,]),'NIL':([69,72,73,96,97,101,110,111,112,113,119,153,154,155,156,157,158,159,160,170,171,172,173,174,206,213,215,216,217,219,221,222,223,224,232,242,271,273,274,275,],[-262,-262,-262,-262,-262,-262,165,-196,-197,-198,-262,-262,-179,-180,-181,-182,-183,-184,-185,-262,165,-262,-262,-262,-262,165,-16,-17,-18,165,-140,-141,-142,-143,-198,-262,-262,-262,-104,-105,]),'NOT':([69,72,73,96,97,101,110,111,112,113,119,153,154,155,156,157,158,159,160,170,171,172,173,174,206,213,215,216,217,219,221,222,223,224,232,242,271,273,274,275,],[-262,-262,-262,-262,-262,-262,171,-196,-197,-198,-262,-262,-179,-180,-181,-182,-183,-184,-185,-262,171,-262,-262,-262,-262,171,-16,-17,-18,171,-140,-141,-142,-143,-198,-262,-262,-262,-104,-105,]),'PACKED':([124,180,297,298,331,357,],[195,195,195,195,195,195,]),'ARRAY':([124,180,191,195,196,297,298,331,357,],[-262,-262,254,-219,-220,-262,-262,-262,-262,]),'RECORD':([124,180,191,195,196,297,298,331,357,],[-262,-262,255,-219,-220,-262,-262,-262,-262,]),'SET':([124,180,191,195,196,297,298,331,357,],[-262,-262,256,-219,-220,-262,-262,-262,-262,]),'FILE':([124,180,191,195,196,297,298,331,357,],[-262,-262,257,-219,-220,-262,-262,-262,-262,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_heading':([0,],[2,]),'block':([2,],[4,]),'declaration_part':([2,],[5,]),'declaration_part_opt_1':([2,],[6,]),'label_declaration_part':([2,],[7,]),'empty':([2,6,10,13,14,18,24,25,28,39,42,56,58,69,70,72,73,87,88,90,95,96,97,101,104,119,123,124,135,139,152,153,161,162,166,170,172,173,174,175,176,178,179,180,198,206,208,209,231,236,237,239,242,248,255,263,266,267,271,273,277,279,280,282,284,286,287,289,291,292,294,295,297,298,299,304,311,313,316,319,331,339,344,348,354,356,357,359,364,367,368,],[8,16,22,27,30,36,43,50,83,94,27,100,27,113,27,113,113,127,133,36,43,113,113,113,150,113,183,196,94,207,27,113,214,220,227,113,232,113,113,27,133,243,246,196,127,113,27,150,272,278,281,285,113,183,293,207,214,220,113,113,27,310,133,27,133,243,246,133,321,324,327,330,196,196,133,272,281,285,345,324,196,27,133,327,345,133,196,365,133,365,293,]),'statement_part':([5,],[12,]),'declaration_part_opt_2':([6,],[14,]),'constant_definition_part':([6,],[15,]),'label':([9,35,57,],[18,90,102,]),'program_heading_opt_1':([10,],[20,]),'statement_sequence':([13,58,70,],[23,103,114,]),'statement':([13,42,58,70,152,175,208,277,282,339,],[24,95,24,24,210,236,264,307,312,352,]),'statement_opt_1':([13,42,58,70,152,175,208,277,282,339,],[25,25,25,25,25,25,25,25,25,25,]),'declaration_part_opt_3':([14,],[28,]),'type_definition_part':([14,],[29,]),'constant_definition':([17,87,198,],[32,125,125,]),'label_declaration_part_1':([18,90,],[34,134,]),'identifier_list':([21,84,179,194,255,287,326,368,],[38,122,122,260,296,122,296,296,]),'statement_sequence_1':([24,95,],[41,136,]),'statement_1':([25,],[44,]),'simple_statement':([25,],[45,]),'structured_statement':([25,],[46,]),'assignment_statement':([25,],[47,]),'procedure_statement':([25,],[48,]),'goto_statement':([25,],[49,]),'compound_statement':([25,],[51,]),'repetitive_statement':([25,],[52,]),'conditional_statement':([25,],[53,]),'with_statement':([25,],[54,]),'variable':([25,64,101,110,149,171,206,213,219,],[55,105,145,168,105,168,145,168,168,]),'while_statement':([25,],[59,]),'repeat_statement':([25,],[60,]),'for_statement':([25,],[61,]),'if_statement':([25,],[62,]),'case_statement':([25,],[63,]),'record_variable':([25,64,101,110,149,171,206,213,219,],[65,104,65,65,209,65,65,65,65,]),'entire_variable':([25,64,101,110,149,171,206,213,219,],[66,66,66,66,66,66,66,66,66,]),'component_variable':([25,64,101,110,149,171,206,213,219,],[67,67,67,67,67,67,67,67,67,]),'referenced_variable':([25,64,101,110,149,171,206,213,219,],[68,68,68,68,68,68,68,68,68,]),'indexed_variable':([25,64,101,110,149,171,206,213,219,],[74,74,74,74,74,74,74,74,74,]),'field_designator':([25,64,101,110,149,171,206,213,219,],[75,75,75,75,75,75,75,75,75,]),'file_buffer':([25,64,101,110,149,171,206,213,219,],[76,76,76,76,76,76,76,76,76,]),'pointer_variable':([25,64,101,110,149,171,206,213,219,],[77,77,77,77,77,77,77,77,77,]),'array_variable':([25,64,101,110,149,171,206,213,219,],[78,78,78,78,78,78,78,78,78,]),'file_variable':([25,64,101,110,149,171,206,213,219,],[79,79,79,79,79,79,79,79,79,]),'declaration_part_opt_4':([28,],[81,]),'variable_declaration_part':([28,],[82,]),'type_definition':([31,123,248,],[85,181,181,]),'identifier_list_1':([39,135,],[92,204,]),'procedure_statement_opt_1':([56,],[98,]),'actual_parameter_list':([56,166,],[99,226,]),'expression':([69,72,73,96,97,101,119,170,172,173,174,206,242,271,273,],[108,116,117,137,138,144,178,228,231,233,235,144,286,304,306,]),'simple_expression':([69,72,73,96,97,101,119,153,170,172,173,174,206,242,271,273,],[109,109,109,109,109,109,109,211,109,109,109,109,109,109,109,109,]),'simple_expression_opt_1':([69,72,73,96,97,101,119,153,170,172,173,174,206,242,271,273,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'variable_declaration':([84,179,287,],[121,244,244,]),'constant_definition_part_1':([87,198,],[126,261,]),'constant':([88,124,176,180,280,284,289,297,298,299,331,344,356,357,364,],[128,197,239,197,239,313,197,197,197,337,197,197,239,197,239,]),'constant_opt_sign':([88,124,176,180,280,284,289,297,298,299,331,344,356,357,364,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'actual_parameter':([101,206,],[139,263,]),'actual_value':([101,206,],[140,140,]),'actual_variable':([101,206,],[141,141,]),'actual_function':([101,206,],[142,142,]),'actual_procedure':([101,206,],[143,143,]),'with_statement_1':([104,209,],[148,265,]),'relational_operator':([109,],[153,]),'term':([110,213,],[161,266,]),'factor':([110,171,213,219,],[162,229,162,267,]),'set':([110,171,213,219,],[167,167,167,167,]),'function_designator':([110,171,213,219,],[169,169,169,169,]),'expression_list':([119,],[177,]),'type_definition_part_1':([123,248,],[182,288,]),'type':([124,180,297,298,331,357,],[185,247,333,335,351,362,]),'simple_type':([124,180,289,297,298,331,344,357,],[186,186,317,186,186,186,317,186,]),'structured_type':([124,180,297,298,331,357,],[187,187,187,187,187,187,]),'pointer_type':([124,180,297,298,331,357,],[188,188,188,188,188,188,]),'subrange_type':([124,180,289,297,298,331,344,357,],[189,189,189,189,189,189,189,189,]),'enumerated_type':([124,180,289,297,298,331,344,357,],[190,190,190,190,190,190,190,190,]),'structered_type_opt_1':([124,180,297,298,331,357,],[191,191,191,191,191,191,]),'lower_bound':([124,180,289,297,298,331,344,357,],[193,193,193,193,193,193,193,193,]),'number':([129,],[200,]),'integer':([129,],[201,]),'real_number':([129,],[202,]),'actual_parameter_list_1':([139,263,],[205,301,]),'simple_expression_1':([161,266,],[212,302,]),'addition_operator':([161,266,],[213,213,]),'term_1':([162,267,],[218,303,]),'multiplication_operator':([162,267,],[219,219,]),'function_designator_opt_1':([166,],[225,]),'element_list':([172,],[230,]),'initial_expression':([174,],[234,]),'case_element':([176,280,],[237,311,]),'case_label_list':([176,280,356,364,],[238,238,360,360,]),'expression_list_1':([178,286,],[241,314,]),'variable_declaration_part_1':([179,287,],[245,315,]),'unpacked_structured_type':([191,],[249,]),'array_type':([191,],[250,]),'record_type':([191,],[251,]),'set_type':([191,],[252,]),'file_type':([191,],[253,]),'element_list_1':([231,304,],[270,338,]),'for_statement_opt_1':([234,],[273,]),'if_statement_opt_1':([236,],[276,]),'case_statement_1':([237,311,],[279,341,]),'case_label_list_1':([239,313,],[283,342,]),'field_list':([255,368,],[290,370,]),'fixed_part':([255,368,],[291,291,]),'variant_part':([255,320,368,],[292,347,292,]),'record_section':([255,326,368,],[294,348,294,]),'final_expression':([273,],[305,]),'case_statement_opt':([279,],[308,]),'index_type':([289,344,],[316,354,]),'field_list_opt_1':([291,],[319,]),'field_list_opt_2':([292,319,],[322,346,]),'fixed_part_1':([294,348,],[325,355,]),'tag_field':([295,],[328,]),'base_type':([297,],[332,]),'file_component_type':([298,],[334,]),'upper_bound':([299,],[336,]),'array_type_1':([316,354,],[343,358,]),'variant':([356,364,],[359,367,]),'element_type':([357,],[361,]),'variant_part_1':([359,367,],[363,369,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_heading block DOT','program',3,'p_program','minipascal_parser_truco.py',10),
  ('program_heading -> PROGRAM ID program_heading_opt_1 SEMICOLON','program_heading',4,'p_program_heading','minipascal_parser_truco.py',13),
  ('program_heading_opt_1 -> LPAREN identifier_list RPAREN','program_heading_opt_1',3,'p_program_heading_opt_1','minipascal_parser_truco.py',16),
  ('program_heading_opt_1 -> empty','program_heading_opt_1',1,'p_program_heading_opt_1','minipascal_parser_truco.py',17),
  ('actual_function -> ID','actual_function',1,'p_actual_function','minipascal_parser_truco.py',20),
  ('actual_parameter_list -> LPAREN actual_parameter actual_parameter_list_1 RPAREN','actual_parameter_list',4,'p_actual_parameter_list','minipascal_parser_truco.py',23),
  ('actual_parameter_list_1 -> COMMA actual_parameter actual_parameter_list_1','actual_parameter_list_1',3,'p_actual_parameter_list_1','minipascal_parser_truco.py',26),
  ('actual_parameter_list_1 -> empty','actual_parameter_list_1',1,'p_actual_parameter_list_1','minipascal_parser_truco.py',27),
  ('actual_parameter -> actual_value','actual_parameter',1,'p_actual_parameter','minipascal_parser_truco.py',30),
  ('actual_parameter -> actual_variable','actual_parameter',1,'p_actual_parameter','minipascal_parser_truco.py',31),
  ('actual_parameter -> actual_function','actual_parameter',1,'p_actual_parameter','minipascal_parser_truco.py',32),
  ('actual_parameter -> actual_procedure','actual_parameter',1,'p_actual_parameter','minipascal_parser_truco.py',33),
  ('actual_procedure -> ID','actual_procedure',1,'p_actual_procedure','minipascal_parser_truco.py',36),
  ('actual_value -> expression','actual_value',1,'p_actual_value','minipascal_parser_truco.py',39),
  ('actual_variable -> variable','actual_variable',1,'p_actual_variable','minipascal_parser_truco.py',42),
  ('addition_operator -> PLUS','addition_operator',1,'p_addition_operator','minipascal_parser_truco.py',45),
  ('addition_operator -> MINUS','addition_operator',1,'p_addition_operator','minipascal_parser_truco.py',46),
  ('addition_operator -> OR','addition_operator',1,'p_addition_operator','minipascal_parser_truco.py',47),
  ('array_type -> ARRAY LBRACKET index_type array_type_1 RBRACKET OF element_type','array_type',7,'p_array_type','minipascal_parser_truco.py',50),
  ('array_type_1 -> COMMA index_type array_type_1','array_type_1',3,'p_array_type_1','minipascal_parser_truco.py',53),
  ('array_type_1 -> empty','array_type_1',1,'p_array_type_1','minipascal_parser_truco.py',54),
  ('array_variable -> variable','array_variable',1,'p_array_variable','minipascal_parser_truco.py',57),
  ('assignment_statement -> variable ASSIGN expression','assignment_statement',3,'p_assignment_statement','minipascal_parser_truco.py',60),
  ('assignment_statement -> ID ASSIGN expression','assignment_statement',3,'p_assignment_statement','minipascal_parser_truco.py',61),
  ('base_type -> type','base_type',1,'p_base_type','minipascal_parser_truco.py',64),
  ('block -> declaration_part statement_part','block',2,'p_block','minipascal_parser_truco.py',67),
  ('bound_specification -> ID DOT DOT ID COLON ordinal_type_identifier','bound_specification',6,'p_bound_specification','minipascal_parser_truco.py',70),
  ('case_element -> case_label_list COLON statement','case_element',3,'p_case_element','minipascal_parser_truco.py',73),
  ('case_label_list -> constant case_label_list_1','case_label_list',2,'p_case_label_list','minipascal_parser_truco.py',76),
  ('case_label_list_1 -> COMMA constant case_label_list_1','case_label_list_1',3,'p_case_label_list_1','minipascal_parser_truco.py',79),
  ('case_label_list_1 -> empty','case_label_list_1',1,'p_case_label_list_1','minipascal_parser_truco.py',80),
  ('case_statement -> CASE expression OF case_element case_statement_1 case_statement_opt END','case_statement',7,'p_case_statement','minipascal_parser_truco.py',83),
  ('case_statement_1 -> SEMICOLON case_element case_statement_1','case_statement_1',3,'p_case_statement_1','minipascal_parser_truco.py',86),
  ('case_statement_1 -> empty','case_statement_1',1,'p_case_statement_1','minipascal_parser_truco.py',87),
  ('case_statement_opt -> SEMICOLON','case_statement_opt',1,'p_case_statement_opt','minipascal_parser_truco.py',90),
  ('case_statement_opt -> empty','case_statement_opt',1,'p_case_statement_opt','minipascal_parser_truco.py',91),
  ('component_variable -> indexed_variable','component_variable',1,'p_component_variable','minipascal_parser_truco.py',94),
  ('component_variable -> field_designator','component_variable',1,'p_component_variable','minipascal_parser_truco.py',95),
  ('component_variable -> file_buffer','component_variable',1,'p_component_variable','minipascal_parser_truco.py',96),
  ('compound_statement -> BEGIN statement_sequence END','compound_statement',3,'p_compound_statement','minipascal_parser_truco.py',99),
  ('conditional_statement -> if_statement','conditional_statement',1,'p_conditional_statement','minipascal_parser_truco.py',102),
  ('conditional_statement -> case_statement','conditional_statement',1,'p_conditional_statement','minipascal_parser_truco.py',103),
  ('conformant_array_schema -> packed_conformant_array_schema','conformant_array_schema',1,'p_conformant_array_schema','minipascal_parser_truco.py',106),
  ('conformant_array_schema -> unpacked_conformant_array_schema','conformant_array_schema',1,'p_conformant_array_schema','minipascal_parser_truco.py',107),
  ('constant_definition_part -> CONST constant_definition SEMICOLON constant_definition_part_1','constant_definition_part',4,'p_constant_definition_part','minipascal_parser_truco.py',110),
  ('constant_definition_part_1 -> constant_definition SEMICOLON constant_definition_part_1','constant_definition_part_1',3,'p_constant_definition_part_1','minipascal_parser_truco.py',113),
  ('constant_definition_part_1 -> empty','constant_definition_part_1',1,'p_constant_definition_part_1','minipascal_parser_truco.py',114),
  ('constant_definition -> ID EQUAL constant','constant_definition',3,'p_constant_definition','minipascal_parser_truco.py',117),
  ('constant -> constant_opt_sign ID','constant',2,'p_constant','minipascal_parser_truco.py',120),
  ('constant -> constant_opt_sign number','constant',2,'p_constant','minipascal_parser_truco.py',121),
  ('constant -> CONSTSTRING','constant',1,'p_constant','minipascal_parser_truco.py',122),
  ('constant_opt_sign -> PLUS','constant_opt_sign',1,'p_constant_opt_sign','minipascal_parser_truco.py',125),
  ('constant_opt_sign -> MINUS','constant_opt_sign',1,'p_constant_opt_sign','minipascal_parser_truco.py',126),
  ('constant_opt_sign -> empty','constant_opt_sign',1,'p_constant_opt_sign','minipascal_parser_truco.py',127),
  ('declaration_part -> declaration_part_opt_1 declaration_part_opt_2 declaration_part_opt_3 declaration_part_opt_4','declaration_part',4,'p_declaration_part','minipascal_parser_truco.py',131),
  ('declaration_part_opt_1 -> label_declaration_part','declaration_part_opt_1',1,'p_declaration_part_opt_1','minipascal_parser_truco.py',134),
  ('declaration_part_opt_1 -> empty','declaration_part_opt_1',1,'p_declaration_part_opt_1','minipascal_parser_truco.py',135),
  ('declaration_part_opt_2 -> constant_definition_part','declaration_part_opt_2',1,'p_declaration_part_opt_2','minipascal_parser_truco.py',138),
  ('declaration_part_opt_2 -> empty','declaration_part_opt_2',1,'p_declaration_part_opt_2','minipascal_parser_truco.py',139),
  ('declaration_part_opt_3 -> type_definition_part','declaration_part_opt_3',1,'p_declaration_part_opt_3','minipascal_parser_truco.py',142),
  ('declaration_part_opt_3 -> empty','declaration_part_opt_3',1,'p_declaration_part_opt_3','minipascal_parser_truco.py',143),
  ('declaration_part_opt_4 -> variable_declaration_part','declaration_part_opt_4',1,'p_declaration_part_opt_4','minipascal_parser_truco.py',146),
  ('declaration_part_opt_4 -> empty','declaration_part_opt_4',1,'p_declaration_part_opt_4','minipascal_parser_truco.py',147),
  ('directive -> FORWARD','directive',1,'p_directive','minipascal_parser_truco.py',150),
  ('element_list -> expression element_list_1','element_list',2,'p_element_list','minipascal_parser_truco.py',153),
  ('element_list -> empty','element_list',1,'p_element_list','minipascal_parser_truco.py',154),
  ('element_list_1 -> COMMA expression element_list_1','element_list_1',3,'p_element_list_1','minipascal_parser_truco.py',157),
  ('element_list_1 -> empty','element_list_1',1,'p_element_list_1','minipascal_parser_truco.py',158),
  ('element_type -> type','element_type',1,'p_element_type','minipascal_parser_truco.py',161),
  ('entire_variable -> ID','entire_variable',1,'p_entire_variable','minipascal_parser_truco.py',164),
  ('enumerated_type -> LPAREN identifier_list RPAREN','enumerated_type',3,'p_enumerated_type','minipascal_parser_truco.py',167),
  ('expression_list -> expression expression_list_1','expression_list',2,'p_expression_list','minipascal_parser_truco.py',170),
  ('expression_list_1 -> COMMA expression expression_list_1','expression_list_1',3,'p_expression_list_1','minipascal_parser_truco.py',173),
  ('expression_list_1 -> empty','expression_list_1',1,'p_expression_list_1','minipascal_parser_truco.py',174),
  ('expression -> simple_expression','expression',1,'p_expression','minipascal_parser_truco.py',177),
  ('expression -> simple_expression relational_operator simple_expression','expression',3,'p_expression','minipascal_parser_truco.py',178),
  ('factor -> NUMBER','factor',1,'p_factor','minipascal_parser_truco.py',181),
  ('factor -> CONSTSTRING','factor',1,'p_factor','minipascal_parser_truco.py',182),
  ('factor -> NIL','factor',1,'p_factor','minipascal_parser_truco.py',183),
  ('factor -> ID','factor',1,'p_factor','minipascal_parser_truco.py',184),
  ('factor -> set','factor',1,'p_factor','minipascal_parser_truco.py',185),
  ('factor -> variable','factor',1,'p_factor','minipascal_parser_truco.py',186),
  ('factor -> function_designator','factor',1,'p_factor','minipascal_parser_truco.py',187),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','minipascal_parser_truco.py',188),
  ('factor -> NOT factor','factor',2,'p_factor','minipascal_parser_truco.py',189),
  ('field_designator -> record_variable DOT ID','field_designator',3,'p_field_designator','minipascal_parser_truco.py',192),
  ('field_list -> fixed_part field_list_opt_1 field_list_opt_2','field_list',3,'p_field_list','minipascal_parser_truco.py',195),
  ('field_list -> variant_part field_list_opt_2','field_list',2,'p_field_list','minipascal_parser_truco.py',196),
  ('field_list -> empty','field_list',1,'p_field_list','minipascal_parser_truco.py',197),
  ('field_list_opt_1 -> SEMICOLON variant_part','field_list_opt_1',2,'p_field_list_opt_1','minipascal_parser_truco.py',200),
  ('field_list_opt_1 -> empty','field_list_opt_1',1,'p_field_list_opt_1','minipascal_parser_truco.py',201),
  ('field_list_opt_2 -> SEMICOLON','field_list_opt_2',1,'p_field_list_opt_2','minipascal_parser_truco.py',204),
  ('field_list_opt_2 -> empty','field_list_opt_2',1,'p_field_list_opt_2','minipascal_parser_truco.py',205),
  ('field_width -> expression','field_width',1,'p_field_width','minipascal_parser_truco.py',208),
  ('file_buffer -> file_variable CIRCUMFLEX','file_buffer',2,'p_file_buffer','minipascal_parser_truco.py',211),
  ('file_component_type -> type','file_component_type',1,'p_file_component_type','minipascal_parser_truco.py',214),
  ('file_type -> FILE OF file_component_type','file_type',3,'p_file_type','minipascal_parser_truco.py',217),
  ('file_variable -> variable','file_variable',1,'p_file_variable','minipascal_parser_truco.py',220),
  ('final_expression -> expression','final_expression',1,'p_final_expression','minipascal_parser_truco.py',223),
  ('fixed_part -> record_section fixed_part_1','fixed_part',2,'p_fixed_part','minipascal_parser_truco.py',226),
  ('fixed_part_1 -> SEMICOLON record_section fixed_part_1','fixed_part_1',3,'p_fixed_part_1','minipascal_parser_truco.py',229),
  ('fixed_part_1 -> empty','fixed_part_1',1,'p_fixed_part_1','minipascal_parser_truco.py',230),
  ('for_statement -> FOR ID ASSIGN initial_expression for_statement_opt_1 final_expression DO statement','for_statement',8,'p_for_statement','minipascal_parser_truco.py',233),
  ('for_statement_opt_1 -> TO','for_statement_opt_1',1,'p_for_statement_opt_1','minipascal_parser_truco.py',236),
  ('for_statement_opt_1 -> DOWNTO','for_statement_opt_1',1,'p_for_statement_opt_1','minipascal_parser_truco.py',237),
  ('formal_parameter_list -> LPAREN formal_parameter_section formal_parameter_list_1 RPAREN','formal_parameter_list',4,'p_formal_parameter_list','minipascal_parser_truco.py',240),
  ('formal_parameter_list_1 -> SEMICOLON formal_parameter_section formal_parameter_list_1','formal_parameter_list_1',3,'p_formal_parameter_list_1','minipascal_parser_truco.py',243),
  ('formal_parameter_list_1 -> empty','formal_parameter_list_1',1,'p_formal_parameter_list_1','minipascal_parser_truco.py',244),
  ('formal_parameter_section -> value_parameter_section','formal_parameter_section',1,'p_formal_parameter_section','minipascal_parser_truco.py',247),
  ('formal_parameter_section -> variable_parameter_section','formal_parameter_section',1,'p_formal_parameter_section','minipascal_parser_truco.py',248),
  ('formal_parameter_section -> procedure_parameter_section','formal_parameter_section',1,'p_formal_parameter_section','minipascal_parser_truco.py',249),
  ('formal_parameter_section -> function_parameter_section','formal_parameter_section',1,'p_formal_parameter_section','minipascal_parser_truco.py',250),
  ('fraction_length -> expression','fraction_length',1,'p_fraction_length','minipascal_parser_truco.py',253),
  ('function_declaration -> function_heading SEMICOLON function_declaration_1 SEMICOLON','function_declaration',4,'p_function_declaration','minipascal_parser_truco.py',256),
  ('function_declaration_1 -> directive','function_declaration_1',1,'p_function_declaration_1','minipascal_parser_truco.py',259),
  ('function_declaration_1 -> block','function_declaration_1',1,'p_function_declaration_1','minipascal_parser_truco.py',260),
  ('function_designator -> ID function_designator_opt_1','function_designator',2,'p_function_designator','minipascal_parser_truco.py',263),
  ('function_designator_opt_1 -> actual_parameter_list','function_designator_opt_1',1,'p_function_designator_opt_1','minipascal_parser_truco.py',266),
  ('function_designator_opt_1 -> empty','function_designator_opt_1',1,'p_function_designator_opt_1','minipascal_parser_truco.py',267),
  ('function_heading -> FUNCTION ID function_heading_opt_1 COLON result_type','function_heading',5,'p_function_heading','minipascal_parser_truco.py',270),
  ('function_heading_opt_1 -> formal_parameter_list','function_heading_opt_1',1,'p_function_heading_opt_1','minipascal_parser_truco.py',273),
  ('function_heading_opt_1 -> empty','function_heading_opt_1',1,'p_function_heading_opt_1','minipascal_parser_truco.py',274),
  ('function_parameter_section -> function_heading','function_parameter_section',1,'p_function_parameter_section','minipascal_parser_truco.py',277),
  ('goto_statement -> GOTO label','goto_statement',2,'p_goto_statement','minipascal_parser_truco.py',280),
  ('identifier_list -> ID identifier_list_1','identifier_list',2,'p_identifier_list','minipascal_parser_truco.py',283),
  ('identifier_list_1 -> COMMA ID identifier_list_1','identifier_list_1',3,'p_identifier_list_1','minipascal_parser_truco.py',286),
  ('identifier_list_1 -> empty','identifier_list_1',1,'p_identifier_list_1','minipascal_parser_truco.py',287),
  ('if_statement -> IF expression THEN statement if_statement_opt_1','if_statement',5,'p_if_statement','minipascal_parser_truco.py',290),
  ('if_statement_opt_1 -> ELSE statement','if_statement_opt_1',2,'p_if_statement_opt_1','minipascal_parser_truco.py',293),
  ('if_statement_opt_1 -> empty','if_statement_opt_1',1,'p_if_statement_opt_1','minipascal_parser_truco.py',294),
  ('index_type -> simple_type','index_type',1,'p_index_type','minipascal_parser_truco.py',297),
  ('indexed_variable -> array_variable LBRACKET expression_list RBRACKET','indexed_variable',4,'p_indexed_variable','minipascal_parser_truco.py',300),
  ('initial_expression -> expression','initial_expression',1,'p_initial_expression','minipascal_parser_truco.py',303),
  ('integer -> NUMBER','integer',1,'p_integer_number','minipascal_parser_truco.py',306),
  ('label_declaration_part -> LABEL label label_declaration_part_1 SEMICOLON','label_declaration_part',4,'p_label_declaration_part','minipascal_parser_truco.py',309),
  ('label_declaration_part_1 -> SEMICOLON label label_declaration_part_1','label_declaration_part_1',3,'p_label_declaration_part_1','minipascal_parser_truco.py',312),
  ('label_declaration_part_1 -> empty','label_declaration_part_1',1,'p_label_declaration_part_1','minipascal_parser_truco.py',313),
  ('label -> NUMBER','label',1,'p_label','minipascal_parser_truco.py',316),
  ('lower_bound -> constant','lower_bound',1,'p_lower_bound','minipascal_parser_truco.py',319),
  ('multiplication_operator -> TIMES','multiplication_operator',1,'p_multiplication_operator','minipascal_parser_truco.py',322),
  ('multiplication_operator -> DIVIDE','multiplication_operator',1,'p_multiplication_operator','minipascal_parser_truco.py',323),
  ('multiplication_operator -> MODULUS','multiplication_operator',1,'p_multiplication_operator','minipascal_parser_truco.py',324),
  ('multiplication_operator -> AND','multiplication_operator',1,'p_multiplication_operator','minipascal_parser_truco.py',325),
  ('number -> integer','number',1,'p_number','minipascal_parser_truco.py',328),
  ('number -> real_number','number',1,'p_number','minipascal_parser_truco.py',329),
  ('ordinal_type_identifier -> ID','ordinal_type_identifier',1,'p_ordinal_type_identifier','minipascal_parser_truco.py',332),
  ('output_list -> output_value output_list_opt_1','output_list',2,'p_output_list','minipascal_parser_truco.py',335),
  ('output_list_opt_1 -> COMMA output_value output_list_opt_1','output_list_opt_1',3,'p_output_list_opt_1','minipascal_parser_truco.py',338),
  ('output_list_opt_1 -> empty','output_list_opt_1',1,'p_output_list_opt_1','minipascal_parser_truco.py',339),
  ('output_value -> expression output_value_opt_1','output_value',2,'p_output_value','minipascal_parser_truco.py',342),
  ('output_value_opt_1 -> SEMICOLON field_width output_value_opt_2','output_value_opt_1',3,'p_output_value_opt_1','minipascal_parser_truco.py',345),
  ('output_value_opt_1 -> empty','output_value_opt_1',1,'p_output_value_opt_1','minipascal_parser_truco.py',346),
  ('output_value_opt_2 -> COLON fraction_length','output_value_opt_2',2,'p_output_value_opt_2','minipascal_parser_truco.py',349),
  ('output_value_opt_2 -> empty','output_value_opt_2',1,'p_output_value_opt_2','minipascal_parser_truco.py',350),
  ('packed_conformant_array_schema -> PACKED ARRAY LBRACKET bound_specification RBRACKET OF ID','packed_conformant_array_schema',7,'p_packed_conformant_array_schema','minipascal_parser_truco.py',353),
  ('parameter_type -> ID','parameter_type',1,'p_parameter_type','minipascal_parser_truco.py',356),
  ('parameter_type -> conformant_array_schema','parameter_type',1,'p_parameter_type','minipascal_parser_truco.py',357),
  ('pointer_type -> CIRCUMFLEX ID','pointer_type',2,'p_pointer_type','minipascal_parser_truco.py',360),
  ('pointer_variable -> variable','pointer_variable',1,'p_pointer_variable','minipascal_parser_truco.py',363),
  ('procedure_and_function_declaration_part -> procedure_and_function_declaration_part_1','procedure_and_function_declaration_part',1,'p_procedure_and_function_declaration_part','minipascal_parser_truco.py',366),
  ('procedure_and_function_declaration_part_1 -> procedure_declaration SEMICOLON procedure_and_function_declaration_part_1','procedure_and_function_declaration_part_1',3,'p_procedure_and_function_declaration_part_1','minipascal_parser_truco.py',369),
  ('procedure_and_function_declaration_part_1 -> function_declaration SEMICOLON procedure_and_function_declaration_part_1','procedure_and_function_declaration_part_1',3,'p_procedure_and_function_declaration_part_1','minipascal_parser_truco.py',370),
  ('procedure_and_function_declaration_part_1 -> empty','procedure_and_function_declaration_part_1',1,'p_procedure_and_function_declaration_part_1','minipascal_parser_truco.py',371),
  ('procedure_declaration -> procedure_heading SEMICOLON procedure_declaration_1','procedure_declaration',3,'p_procedure_declaration','minipascal_parser_truco.py',374),
  ('procedure_declaration_1 -> directive','procedure_declaration_1',1,'p_procedure_declaration_1','minipascal_parser_truco.py',377),
  ('procedure_declaration_1 -> block','procedure_declaration_1',1,'p_procedure_declaration_1','minipascal_parser_truco.py',378),
  ('procedure_heading -> PROCEDURE ID procedure_heading_opt_1','procedure_heading',3,'p_procedure_heading','minipascal_parser_truco.py',381),
  ('procedure_heading_opt_1 -> formal_parameter_list','procedure_heading_opt_1',1,'p_procedure_heading_opt_1','minipascal_parser_truco.py',384),
  ('procedure_heading_opt_1 -> empty','procedure_heading_opt_1',1,'p_procedure_heading_opt_1','minipascal_parser_truco.py',385),
  ('procedure_parameter_section -> procedure_heading','procedure_parameter_section',1,'p_procedure_parameter_section','minipascal_parser_truco.py',388),
  ('procedure_statement -> ID procedure_statement_opt_1','procedure_statement',2,'p_procedure_statement','minipascal_parser_truco.py',391),
  ('procedure_statement_opt_1 -> actual_parameter_list','procedure_statement_opt_1',1,'p_procedure_statement_opt_1','minipascal_parser_truco.py',394),
  ('procedure_statement_opt_1 -> empty','procedure_statement_opt_1',1,'p_procedure_statement_opt_1','minipascal_parser_truco.py',395),
  ('real_number -> NUMBER','real_number',1,'p_real_number','minipascal_parser_truco.py',400),
  ('record_section -> identifier_list COLON type','record_section',3,'p_record_section','minipascal_parser_truco.py',403),
  ('record_type -> RECORD field_list END','record_type',3,'p_record_type','minipascal_parser_truco.py',406),
  ('record_variable -> variable','record_variable',1,'p_record_variable','minipascal_parser_truco.py',409),
  ('referenced_variable -> pointer_variable CIRCUMFLEX','referenced_variable',2,'p_referenced_variable','minipascal_parser_truco.py',412),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','minipascal_parser_truco.py',415),
  ('relational_operator -> DEQUAL','relational_operator',1,'p_relational_operator','minipascal_parser_truco.py',416),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','minipascal_parser_truco.py',417),
  ('relational_operator -> LESSEQUAL','relational_operator',1,'p_relational_operator','minipascal_parser_truco.py',418),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','minipascal_parser_truco.py',419),
  ('relational_operator -> GREATEREQUAL','relational_operator',1,'p_relational_operator','minipascal_parser_truco.py',420),
  ('relational_operator -> IN','relational_operator',1,'p_relational_operator','minipascal_parser_truco.py',421),
  ('repeat_statement -> REPEAT statement_sequence UNTIL expression','repeat_statement',4,'p_repeat_statement','minipascal_parser_truco.py',424),
  ('repetitive_statement -> while_statement','repetitive_statement',1,'p_repetitive_statement','minipascal_parser_truco.py',427),
  ('repetitive_statement -> repeat_statement','repetitive_statement',1,'p_repetitive_statement','minipascal_parser_truco.py',428),
  ('repetitive_statement -> for_statement','repetitive_statement',1,'p_repetitive_statement','minipascal_parser_truco.py',429),
  ('result_type -> ID','result_type',1,'p_result_type','minipascal_parser_truco.py',432),
  ('set_type -> SET OF base_type','set_type',3,'p_set_type','minipascal_parser_truco.py',435),
  ('set -> LBRACKET element_list RBRACKET','set',3,'p_set','minipascal_parser_truco.py',438),
  ('simple_expression -> simple_expression_opt_1 term simple_expression_1','simple_expression',3,'p_simple_expression','minipascal_parser_truco.py',441),
  ('simple_expression_1 -> addition_operator term simple_expression_1','simple_expression_1',3,'p_simple_expression_1','minipascal_parser_truco.py',444),
  ('simple_expression_1 -> empty','simple_expression_1',1,'p_simple_expression_1','minipascal_parser_truco.py',445),
  ('simple_expression_opt_1 -> PLUS','simple_expression_opt_1',1,'p_simple_expression_opt_1','minipascal_parser_truco.py',447),
  ('simple_expression_opt_1 -> MINUS','simple_expression_opt_1',1,'p_simple_expression_opt_1','minipascal_parser_truco.py',448),
  ('simple_expression_opt_1 -> empty','simple_expression_opt_1',1,'p_simple_expression_opt_1','minipascal_parser_truco.py',449),
  ('simple_statement -> assignment_statement','simple_statement',1,'p_simple_statement','minipascal_parser_truco.py',452),
  ('simple_statement -> procedure_statement','simple_statement',1,'p_simple_statement','minipascal_parser_truco.py',453),
  ('simple_statement -> goto_statement','simple_statement',1,'p_simple_statement','minipascal_parser_truco.py',454),
  ('simple_statement -> empty','simple_statement',1,'p_simple_statement','minipascal_parser_truco.py',455),
  ('simple_type -> subrange_type','simple_type',1,'p_simple_type','minipascal_parser_truco.py',458),
  ('simple_type -> enumerated_type','simple_type',1,'p_simple_type','minipascal_parser_truco.py',459),
  ('statement_part -> BEGIN statement_sequence END','statement_part',3,'p_statement_part','minipascal_parser_truco.py',462),
  ('statement_sequence -> statement statement_sequence_1','statement_sequence',2,'p_statement_sequence','minipascal_parser_truco.py',465),
  ('statement_sequence_1 -> SEMICOLON statement statement_sequence_1','statement_sequence_1',3,'p_statement_sequence_1','minipascal_parser_truco.py',468),
  ('statement_sequence_1 -> empty','statement_sequence_1',1,'p_statement_sequence_1','minipascal_parser_truco.py',469),
  ('statement -> statement_opt_1 statement_1','statement',2,'p_statement','minipascal_parser_truco.py',472),
  ('statement_1 -> simple_statement','statement_1',1,'p_statement_1','minipascal_parser_truco.py',475),
  ('statement_1 -> structured_statement','statement_1',1,'p_statement_1','minipascal_parser_truco.py',476),
  ('statement_opt_1 -> LABEL COLON','statement_opt_1',2,'p_statement_opt_1','minipascal_parser_truco.py',479),
  ('statement_opt_1 -> empty','statement_opt_1',1,'p_statement_opt_1','minipascal_parser_truco.py',480),
  ('structured_statement -> compound_statement','structured_statement',1,'p_structured_statement','minipascal_parser_truco.py',483),
  ('structured_statement -> repetitive_statement','structured_statement',1,'p_structured_statement','minipascal_parser_truco.py',484),
  ('structured_statement -> conditional_statement','structured_statement',1,'p_structured_statement','minipascal_parser_truco.py',485),
  ('structured_statement -> with_statement','structured_statement',1,'p_structured_statement','minipascal_parser_truco.py',486),
  ('structured_type -> structered_type_opt_1 unpacked_structured_type','structured_type',2,'p_structured_type','minipascal_parser_truco.py',489),
  ('structered_type_opt_1 -> PACKED','structered_type_opt_1',1,'p_structered_type_opt_1','minipascal_parser_truco.py',492),
  ('structered_type_opt_1 -> empty','structered_type_opt_1',1,'p_structered_type_opt_1','minipascal_parser_truco.py',493),
  ('subrange_type -> lower_bound DOT DOT upper_bound','subrange_type',4,'p_subrange_type','minipascal_parser_truco.py',496),
  ('tag_field -> ID COLON','tag_field',2,'p_tag_field','minipascal_parser_truco.py',499),
  ('tag_field -> empty','tag_field',1,'p_tag_field','minipascal_parser_truco.py',500),
  ('term -> factor term_1','term',2,'p_term','minipascal_parser_truco.py',503),
  ('term_1 -> multiplication_operator factor term_1','term_1',3,'p_term_1','minipascal_parser_truco.py',506),
  ('term_1 -> empty','term_1',1,'p_term_1','minipascal_parser_truco.py',507),
  ('type_definition_part -> TYPE type_definition SEMICOLON type_definition_part_1','type_definition_part',4,'p_type_definition_part','minipascal_parser_truco.py',510),
  ('type_definition_part_1 -> type_definition SEMICOLON type_definition_part_1','type_definition_part_1',3,'p_type_definition_part_1','minipascal_parser_truco.py',513),
  ('type_definition_part_1 -> empty','type_definition_part_1',1,'p_type_definition_part_1','minipascal_parser_truco.py',514),
  ('type_definition -> ID EQUAL type','type_definition',3,'p_type_definition','minipascal_parser_truco.py',517),
  ('type -> simple_type','type',1,'p_type','minipascal_parser_truco.py',520),
  ('type -> structured_type','type',1,'p_type','minipascal_parser_truco.py',521),
  ('type -> pointer_type','type',1,'p_type','minipascal_parser_truco.py',522),
  ('type -> ID','type',1,'p_type','minipascal_parser_truco.py',523),
  ('unpacked_conformant_array_schema -> ARRAY LBRACKET bound_specification unpacked_conformant_array_schema_1 RBRACKET OF unpacked_conformant_array_schema_2','unpacked_conformant_array_schema',7,'p_unpacked_conformant_array_schema','minipascal_parser_truco.py',526),
  ('unpacked_conformant_array_schema_1 -> SEMICOLON bound_specification unpacked_conformant_array_schema_1','unpacked_conformant_array_schema_1',3,'p_unpacked_conformant_array_schema_1','minipascal_parser_truco.py',529),
  ('unpacked_conformant_array_schema_1 -> empty','unpacked_conformant_array_schema_1',1,'p_unpacked_conformant_array_schema_1','minipascal_parser_truco.py',530),
  ('unpacked_conformant_array_schema_2 -> ID','unpacked_conformant_array_schema_2',1,'p_unpacked_conformant_array_schema_2','minipascal_parser_truco.py',533),
  ('unpacked_conformant_array_schema_2 -> conformant_array_schema','unpacked_conformant_array_schema_2',1,'p_unpacked_conformant_array_schema_2','minipascal_parser_truco.py',534),
  ('unpacked_structured_type -> array_type','unpacked_structured_type',1,'p_unpacked_structured_type','minipascal_parser_truco.py',537),
  ('unpacked_structured_type -> record_type','unpacked_structured_type',1,'p_unpacked_structured_type','minipascal_parser_truco.py',538),
  ('unpacked_structured_type -> set_type','unpacked_structured_type',1,'p_unpacked_structured_type','minipascal_parser_truco.py',539),
  ('unpacked_structured_type -> file_type','unpacked_structured_type',1,'p_unpacked_structured_type','minipascal_parser_truco.py',540),
  ('upper_bound -> constant','upper_bound',1,'p_upper_bound','minipascal_parser_truco.py',543),
  ('value_parameter_section -> identifier_list COLON parameter_type','value_parameter_section',3,'p_value_parameter_section','minipascal_parser_truco.py',546),
  ('variable_declaration_part -> VAR variable_declaration SEMICOLON variable_declaration_part_1','variable_declaration_part',4,'p_variable_declaration_part','minipascal_parser_truco.py',549),
  ('variable_declaration_part_1 -> variable_declaration SEMICOLON variable_declaration_part_1','variable_declaration_part_1',3,'p_variable_declaration_part_1','minipascal_parser_truco.py',552),
  ('variable_declaration_part_1 -> empty','variable_declaration_part_1',1,'p_variable_declaration_part_1','minipascal_parser_truco.py',553),
  ('variable_declaration -> identifier_list COLON type','variable_declaration',3,'p_variable_declaration','minipascal_parser_truco.py',556),
  ('variable_parameter_section -> VAR identifier_list COLON parameter_type','variable_parameter_section',4,'p_variable_parameter_section','minipascal_parser_truco.py',559),
  ('variable -> entire_variable','variable',1,'p_variable','minipascal_parser_truco.py',562),
  ('variable -> component_variable','variable',1,'p_variable','minipascal_parser_truco.py',563),
  ('variable -> referenced_variable','variable',1,'p_variable','minipascal_parser_truco.py',564),
  ('variant_part -> CASE tag_field ID OF variant variant_part_1','variant_part',6,'p_variant_part','minipascal_parser_truco.py',567),
  ('variant_part_1 -> SEMICOLON variant variant_part_1','variant_part_1',3,'p_variant_part_1','minipascal_parser_truco.py',570),
  ('variant_part_1 -> empty','variant_part_1',1,'p_variant_part_1','minipascal_parser_truco.py',571),
  ('variant -> case_label_list COLON LPAREN field_list RPAREN','variant',5,'p_variant','minipascal_parser_truco.py',574),
  ('while_statement -> WHILE expression DO statement','while_statement',4,'p_while_statement','minipascal_parser_truco.py',577),
  ('with_statement -> WITH record_variable with_statement_1 DO statement','with_statement',5,'p_with_statement','minipascal_parser_truco.py',580),
  ('with_statement_1 -> COMMA record_variable with_statement_1','with_statement_1',3,'p_with_statement_1','minipascal_parser_truco.py',583),
  ('with_statement_1 -> empty','with_statement_1',1,'p_with_statement_1','minipascal_parser_truco.py',584),
  ('empty -> <empty>','empty',0,'p_empty','minipascal_parser_truco.py',587),
]
